// Code generated by GoVPP's binapi-generator. DO NOT EDIT.
// versions:
//  binapi-generator: v0.4.0-dev
//  VPP:              20.09-rc0~194-g52e9aaf0b~b1447
// source: /usr/share/vpp/api/plugins/ikev2_types.api.json

// Package ikev2_types contains generated bindings for API file ikev2_types.api.
//
// Contents:
//   6 structs
//
package ikev2_types

import (
	api "git.fd.io/govpp.git/api"
	ip_types "git.fd.io/govpp.git/binapi/ip_types"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the GoVPP api package it is being compiled against.
// A compilation error at this line likely means your copy of the
// GoVPP api package needs to be updated.
const _ = api.GoVppAPIPackageIsVersion2

// Ikev2Auth defines type 'ikev2_auth'.
type Ikev2Auth struct {
	Method  uint8  `binapi:"u8,name=method" json:"method,omitempty"`
	Hex     uint8  `binapi:"u8,name=hex" json:"hex,omitempty"`
	DataLen uint32 `binapi:"u32,name=data_len" json:"-"`
	Data    []byte `binapi:"u8[data_len],name=data" json:"data,omitempty"`
}

// Ikev2ID defines type 'ikev2_id'.
type Ikev2ID struct {
	Type    uint8  `binapi:"u8,name=type" json:"type,omitempty"`
	DataLen uint8  `binapi:"u8,name=data_len" json:"data_len,omitempty"`
	Data    string `binapi:"string[64],name=data" json:"data,omitempty"`
}

// Ikev2Profile defines type 'ikev2_profile'.
type Ikev2Profile struct {
	Name             string             `binapi:"string[64],name=name" json:"name,omitempty"`
	LocID            Ikev2ID            `binapi:"ikev2_id,name=loc_id" json:"loc_id,omitempty"`
	RemID            Ikev2ID            `binapi:"ikev2_id,name=rem_id" json:"rem_id,omitempty"`
	LocTs            Ikev2Ts            `binapi:"ikev2_ts,name=loc_ts" json:"loc_ts,omitempty"`
	RemTs            Ikev2Ts            `binapi:"ikev2_ts,name=rem_ts" json:"rem_ts,omitempty"`
	Responder        Ikev2Responder     `binapi:"ikev2_responder,name=responder" json:"responder,omitempty"`
	IkeTs            Ikev2TransformsSet `binapi:"ikev2_transforms_set,name=ike_ts" json:"ike_ts,omitempty"`
	EspTs            Ikev2TransformsSet `binapi:"ikev2_transforms_set,name=esp_ts" json:"esp_ts,omitempty"`
	Lifetime         uint64             `binapi:"u64,name=lifetime" json:"lifetime,omitempty"`
	LifetimeMaxdata  uint64             `binapi:"u64,name=lifetime_maxdata" json:"lifetime_maxdata,omitempty"`
	LifetimeJitter   uint32             `binapi:"u32,name=lifetime_jitter" json:"lifetime_jitter,omitempty"`
	Handover         uint32             `binapi:"u32,name=handover" json:"handover,omitempty"`
	IpsecOverUDPPort uint16             `binapi:"u16,name=ipsec_over_udp_port" json:"ipsec_over_udp_port,omitempty"`
	TunItf           uint32             `binapi:"u32,name=tun_itf" json:"tun_itf,omitempty"`
	UDPEncap         uint8              `binapi:"u8,name=udp_encap" json:"udp_encap,omitempty"`
	Auth             Ikev2Auth          `binapi:"ikev2_auth,name=auth" json:"auth,omitempty"`
}

// Ikev2Responder defines type 'ikev2_responder'.
type Ikev2Responder struct {
	SwIfIndex uint32              `binapi:"u32,name=sw_if_index" json:"sw_if_index,omitempty"`
	IP4       ip_types.IP4Address `binapi:"ip4_address,name=ip4" json:"ip4,omitempty"`
}

// Ikev2TransformsSet defines type 'ikev2_transforms_set'.
type Ikev2TransformsSet struct {
	CryptoAlg     uint8  `binapi:"u8,name=crypto_alg" json:"crypto_alg,omitempty"`
	IntegAlg      uint8  `binapi:"u8,name=integ_alg" json:"integ_alg,omitempty"`
	DhType        uint8  `binapi:"u8,name=dh_type" json:"dh_type,omitempty"`
	CryptoKeySize uint32 `binapi:"u32,name=crypto_key_size" json:"crypto_key_size,omitempty"`
}

// Ikev2Ts defines type 'ikev2_ts'.
type Ikev2Ts struct {
	TsType      uint8               `binapi:"u8,name=ts_type" json:"ts_type,omitempty"`
	ProtocolID  uint8               `binapi:"u8,name=protocol_id" json:"protocol_id,omitempty"`
	SelectorLen uint16              `binapi:"u16,name=selector_len" json:"selector_len,omitempty"`
	StartPort   uint16              `binapi:"u16,name=start_port" json:"start_port,omitempty"`
	EndPort     uint16              `binapi:"u16,name=end_port" json:"end_port,omitempty"`
	StartAddr   ip_types.IP4Address `binapi:"ip4_address,name=start_addr" json:"start_addr,omitempty"`
	EndAddr     ip_types.IP4Address `binapi:"ip4_address,name=end_addr" json:"end_addr,omitempty"`
}
